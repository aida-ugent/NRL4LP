; conf.ini

# This file corresponds to the base evaluation setup LP2 in the paper: default hyperparameters, d=128, f=0.8,
# In this experiment the binary classifier can be modified to obtain the reslts for LR, LRCV and DT
# The edge split algorithm can also be changes to obtain the results for random, ST and DFT

[GENERAL]
TASK = lp
LP_NUM_EDGE_SPLITS = 3
NC_NUM_NODE_SPLITS =
NC_NODE_FRACS =
NR_EDGE_SAMP_FRAC =
EDGE_EMBEDDING_METHODS = average hadamard weighted_l1 weighted_l2
LP_MODEL = LogisticRegressionCV
# Run also LogisticRegression and sklearn.ensemble.ExtraTreesClassifier()
EMBED_DIM = 128
TIMEOUT = 86400
VERBOSE = True
SEED = 42

[NETWORKS]
NAMES = StudentDB Facebook PPI AstroPh BlogCatalog Wikipedia GR-QC
INPATHS = ../data/StudentDB/studentdb.edgelist
          ../data/Facebook/facebook_combined.txt
          ../data/PPI/ppi.edgelist
          ../data/Astro-PH/CA-AstroPh.txt
          ../data/BlogCatalog/blog.edgelist
          ../data/Wiki/wiki.edgelist
          ../data/GR-QC/CA-GrQc.txt
DIRECTED = False
SEPARATORS = ',' '\s' ',' '\t' ',' ',' '\t'
COMMENTS = '#' '#' '#' '#' '#' '#' '#'
LABELPATHS =

[PREPROCESSING]
RELABEL = True
DEL_SELFLOOPS = True
SAVE_PREP_NW = False
WRITE_STATS = True
DELIMITER = ','

[EDGESPLIT]
TRAINTEST_FRAC = 0.8
TRAINVALID_FRAC = 0.9
SPLIT_ALG = spanning_tree
# random and fast (spanning_tree already done in experiment 0)
OWA = True
FE_RATIO = 1

[BASELINES]
LP_BASELINES = common_neighbours
               jaccard_coefficient
               adamic_adar_index
               preferential_attachment
               resource_allocation_index
               katz
               all_baselines
NEIGHBOURHOOD = in out

[OPENNE METHODS]
NAMES_OPNE = node2vec_opne
             sdne_opne
             line_opne
             deepWalk_opne
             gf_opne
             grarep_opne
             hope_opne
             lap_opne
METHODS_OPNE = ../methods/OpenNE-master/venv/bin/python -m openne --method node2vec --window-size 10 --walk-length 20 --number-walks 20 --p 1.0 --q 1.0
               ../methods/OpenNE-master/venv/bin/python -m openne --method sdne --bs 500 --beta 5 --encoder-list [1024,512,128]
               ../methods/OpenNE-master/venv/bin/python -m openne --method line --epochs 5 --order 3 --negative-ratio 5
               ../methods/OpenNE-master/venv/bin/python -m openne --method deepWalk --window-size 10 --walk-length 20 --number-walks 20
               ../methods/OpenNE-master/venv/bin/python -m openne --method gf --epochs 5
               ../methods/OpenNE-master/venv/bin/python -m openne --method grarep --kstep 4
               ../methods/OpenNE-master/venv/bin/python -m openne --method hope
               ../methods/OpenNE-master/venv/bin/python -m openne --method lap
TUNE_PARAMS_OPNE =

[OTHER METHODS]
NAMES_OTHER = node2vec line metapath2vec prune CNE_degree wys verse mnmf deepWalk struc2vec sdne-gem hope-gem lap-gem lle-gem grarep arope
EMBTYPE_OTHER = ne ne ne ne e2e ne ne ne ne ne ne ne ne ne ne e2e
WRITE_WEIGHTS_OTHER = False True False False False False False False False False True True True True False False
WRITE_DIR_OTHER = True True False True True True True True True True True True True True True False
METHODS_OTHER = ../methods/node2vec/venv/bin/python ../methods/node2vec/main.py --input {} --output {} --dimensions {} --workers 8 --window-size 10 --walk-length 20 --num-walks 20 --p 1.0 --q 1.0
                ../methods/LINE/linux/line -train {} -output {} -size {} -order 2 -samples 100 -threads 8 -rho 0.025 -negative 5
                ../methods/metapath2vec/metapath2vec -train {} -output {} -size {} -min-count 1 -iter 500 -threads 8 -alpha 0.025 -negative 5
                python ../methods/PRUNE/src/main.py --inputgraph {} --output {} --dimension {} --epoch 100 --lamb 0.01
                ../methods/CNE/venv/bin/python ../methods/CNE/main.py --inputgraph {} --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {} --epochs 500 --prior 'degree' --learning_rate 0.01
                ../methods/wys/venv/bin/python3 ../methods/wys/src/main.py --edge-path {} --embedding-path {} --dimensions {} --attention-path /dev/null --epochs 1 --beta 0.5 --gamma 0.5 --window-size 10 --num-of-walks 20 --learning-rate 0.01
                ../methods/verse/venv/bin/python ../methods/verse/python/main.py --input {} --output {} --dimension {} --undirected --alpha 0.85 --threads 8 --nsamples 3
                ../methods/M-NMF-py/venv/bin/python ../methods/M-NMF-py/src/main.py --input {} --embedding-output {} --dimensions {} --assignment-output /dev/null --log-output /dev/null --cluster-mean-output /dev/null --dump-matrices False --clusters 20
                ../methods/deepwalk/venv/bin/deepwalk --input {} --output {} --representation-size {} --format 'edgelist' --workers 8 --window-size 10 --walk-length 20 --number-walks 20
                ../methods/struc2vec/venv/bin/python ../methods/struc2vec/src/main.py --input {} --output {} --dimensions {} --OPT1 True --OPT2 True --OPT3 True --until-layer 6 --workers 8 --num-walks 20 --walk-length 20 --window-size 10
                python ../methods/GEM-master/main.py --input {} --output {} --dimension {} --method sdne --max_iter 5 --bs 500 --beta 5 --encoder-list [1024,512,128]
                python ../methods/GEM-master/main.py --input {} --output {} --dimension {} --method hope --beta 0.01
                python ../methods/GEM-master/main.py --input {} --output {} --dimension {} --method lap
                python ../methods/GEM-master/main.py --input {} --output {} --dimension {} --method lle
                ../methods/GraRep-master/venv/bin/python ../methods/GraRep-master/src/main.py --edge-path {} --output-path {} --dimensions {} --order 5 --iterations 20
                ../methods/AROPE/venv/bin/python ../methods/AROPE/python/main.py --inputgraph {} --tr_e {} --te_e {} --tr_pred {} --te_pred {} --dimension {} --order 4 --weights [1,0.1,0.01,0.001]
TUNE_PARAMS_OTHER =
INPUT_DELIM_OTHER = '\s' '\s' '\s' '\s' ',' ',' ',' ',' '\s' '\s' '\s' '\s' '\s' '\s' ',' ','
OUTPUT_DELIM_OTHER = '\s' '\s' '\s' ',' ',' ',' ',' ',' '\s' '\s' ',' ',' ',' ',' ',' ','

[REPORT]
MAXIMIZE = auroc
SCORES = %(maximize)s
CURVES =
PRECATK_VALS =
